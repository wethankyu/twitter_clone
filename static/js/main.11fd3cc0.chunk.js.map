{"version":3,"sources":["fbase.js","routes/Auth.js","components/Tweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","firebaseInstance","dbService","firestore","storageService","storage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","update","toggleEditing","src","alt","width","height","Home","userObj","tweet","setTweet","tweets","setTweets","attachment","setAttachment","useEffect","collection","onSnapshot","snapshot","tweetArray","docs","map","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","toString","creatorId","add","maxLength","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyTweets","orderBy","where","get","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11fd3cc0.chunk.js","sourcesContent":["// import firebase from \"firebase/app\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst authService = firebase.auth();\n\nexport { authService };\n\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService, firebaseInstance } from 'fbase';\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const { target: { name, value } } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        //log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (event) => {\n    const { target: { name } } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  }\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input name=\"email\" type=\"email\" placeholder=\"email\" required value={email} onChange={onChange} />\n        <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange} />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>{newAccount ? \"Log In\" : \"Create Account\"}</span>\n      <div>\n        <button name=\"google\" onClick={onSocialClick}>continue with Google</button>\n        <button name=\"github\" onClick={onSocialClick}>continue with github</button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;","import { dbService, storageService } from 'fbase';\nimport React, { useState } from \"react\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const onDeleteClick = async () => {\n    const OK = window.confirm(\"are you sure?\");\n    if (OK) {\n      //delete tweet.\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\n    }\n  };\n  const onChange = (event) => {\n    const { target: { value } } = event;\n    setNewTweet(value);\n  }\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\n      text: newTweet\n    })\n    setEditing(false);\n  }\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  return (\n    <div>\n      {\n        editing ? (\n          <>\n            { isOwner && (\n              <>\n                <form onSubmit={onSubmit}>\n                  <input onChange={onChange} type=\"text\" placeholder=\"edit\" value={newTweet} required />\n                  <input type=\"submit\" value=\"edit tweet\" />\n                </form>\n                <button onClick={toggleEditing}>cancel</button>\n              </>)}\n          </>\n        ) : (\n            <>\n              <h4>{tweetObj.text}</h4>\n              {\n                tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} alt=\"tweetobj\" width=\"50px\" height=\"50px\" />\n              }\n              {\n                isOwner && ( // if말고 &&으로 표현가능. 근데 if도 가능할까?\n                  <>\n                    <button onClick={onDeleteClick}>delete</button>\n                    <button onClick={toggleEditing}>edit</button>\n                  </>\n                )\n              }\n            </>\n          )\n      }\n    </div>\n  );\n};\n\nexport default Tweet;","import Tweet from 'components/Tweet';\nimport { dbService, storageService } from 'fbase';\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Home = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [tweets, setTweets] = useState([]);\n  const [attachment, setAttachment] = useState(\"\");\n  // const getTweets = async () => {\n  //   const dbTweets = await dbService.collection(\"tweets\").get();\n  //   dbTweets.forEach(document => {\n  //     const tweetObject = {\n  //       ...document.data(),\n  //       id: document.id,\n  //     };\n  //     setTweets(prev => [tweetObject, ...prev]);\n  //   });\n  // };\n\n  useEffect(() => {\n    // getTweets();\n    dbService.collection(\"tweets\").onSnapshot((snapshot) => {\n      const tweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      })\n      )\n      setTweets(tweetArray);\n    });\n  }, [])\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (tweet) {\n      if (attachment) {\n        const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentUrl = await response.ref.getDownloadURL();\n      }\n      const tweetObj = {\n        text: tweet,\n        createdAt: new Date().toString(),\n        creatorId: userObj.uid,\n        attachmentUrl\n      }\n      await dbService.collection(\"tweets\").add(tweetObj);\n      setTweet(\"\");\n      setAttachment(\"\");\n    };\n  };\n  const onChange = (event) => {\n    const { target: { value } } = event;\n    setTweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const { target: { files } } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      const { target: { result } } = finishedEvent;\n      setAttachment(result);\n    };\n  }\n\n  const onClearAttachment = () => {\n    setAttachment(null);\n  }\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" value={tweet} onChange={onChange} placeholder=\"what's on your mind?\" maxLength={120} />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" value=\"submit\" />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" alt=\"attachment\" height=\"50px\" />\n            <button onClick={onClearAttachment}>clear</button>\n          </div>)}\n      </form>\n      <div>\n        {tweets.map(tweet => (\n          <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import { authService, dbService } from 'fbase';\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    refreshUser();\n    history.push(\"/\"); //router에서 redirect를 쓰는 것말고도 함수내에서 history를 통해 redirect 해줄 수 있음.\n  };\n  const onChange = (event) => {\n    const { target: { value } } = event;\n    setNewDisplayName(value);\n  }\n  const getMyTweets = async () => {\n    const myTweets = await dbService.collection(\"tweets\").orderBy(\"createdAt\").where(\"creatorId\", \"==\", userObj.uid).get();\n    // console.log(myTweets);\n    // console.log(myTweets.docs.map((doc) => doc.data()));\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName\n      })\n      refreshUser();\n    }\n  }\n\n  useEffect(() => {\n    getMyTweets();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" placeholder=\"new display name\" onChange={onChange} value={newDisplayName} />\n        <input type=\"submit\" value=\"update profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\nexport default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n      </li>\n    </ul>\n  </nav>);\n\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              {/* {isLoggedIn && <Navigation />} */}\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n            <>\n              <Route exact path=\"/\">\n                <Auth />\n              </Route>\n              <Redirect from=\"*\" to=\"/\" />\n            </>\n          )}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(true);\n        setUserObj(user);\n        // setUserObj({\n        //   displayName: user.displayName,\n        //   uid: user.uid,\n        //   updateProfile: (args) => user.updateProfile(args)\n        // });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    setUserObj({ ...authService.currentUser });\n    // const user = authService.currentUser;\n    // setUserObj({\n    //   displayName: user.displayName,\n    //   uid: user.uid,\n    //   updateProfile: (args) => user.updateProfile(args)\n    // });\n  }\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"initializing...\"}\n      {/* <footer>&copy; twitter_clone {new Date().getFullYear()}</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport 'fbase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}